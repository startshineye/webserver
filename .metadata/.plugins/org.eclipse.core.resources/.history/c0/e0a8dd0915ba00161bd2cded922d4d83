package com.yxm.javaserver.core;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

import com.yxm.javaserver.util.Logger;

public class HandlerRequest implements Runnable{
   private Socket clientSocket;
   public HandlerRequest(Socket clientSocket){
	   this.clientSocket = clientSocket;
   }
	@Override
	public void run() {
		 Logger.log(Thread.currentThread().getName()+" handler request!");
		 BufferedReader br = null;
		 PrintWriter out = null;
		 //处理请求
		 try {
			Thread.sleep(1000*60);
			//字节流转化成字符流
			br = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
		    String readLine = br.readLine();
		    String requestURI = readLine.split(" ")[1];
		    out = new PrintWriter(clientSocket.getOutputStream());
		
		   if(requestURI.trim().endsWith(".html") || requestURI.trim().endsWith(".htm")){
			   responseStaticPage(requestURI,out);
		   }
		 } catch (Exception e) {
			e.printStackTrace();
		}finally{
			if(clientSocket != null && !clientSocket.isClosed()){
				try {
					clientSocket.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			if(br != null){
				try {
					br.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
	}
	/**
	 * 以http协议返回静态html页面
	 * @param requestURI
	 * @param out
	 */
	public static void responseStaticPage(String requestURI,PrintWriter out){
		String htmlPath = requestURI.substring(1);
	    BufferedReader br = null;
		System.out.println(htmlPath);
		try {
			new BufferedReader(new FileReader(htmlPath));
			StringBuilder html = new StringBuilder();
			html.append("HTTP/1.1 200 OK\n");
			html.append("Content-Type:text/html;charset=UTF-8\n\n");
			String temp = null;
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		
		
	}

}
